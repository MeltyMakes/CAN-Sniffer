#include <mcp2515.h>

struct can_frame canMsg;
MCP2515 mcp2515(10);
//Todo, bad practice will move
int rpm         = 0;
int speedKph    = 0;
char gear       = 'X';
char str[128];

#define CAN_MSG_ENGINE_DATA 0x158
#define CAN_MSG_POWERTRAIN_DATA 0x17C
#define CAN_SIG_RPM_OFFSET 16         //bits
#define CAN_SIG_RPM_LEN 16         //bits

#define CAN_MSG_CAR_SPEED 0x309
#define CAN_SIG_CAR_SPEED_OFFSET 0         //bits
#define CAN_SIG_CAR_SPEED_LEN 16         //bits

#define CAN_MSG_GEARBOX 0x191

#define CAN_MSG_SCM_FEEDBACK 0x326 // has r/l blinker


void setup() {
  Serial.begin(115200);
  int a = 0;
  mcp2515.reset();
  a = mcp2515.setBitrate(CAN_500KBPS, MCP_8MHZ);
  if (a != MCP2515::ERROR_OK) {
    Serial.println("ERR");
    Serial.println(a);
  }
  mcp2515.setListenOnlyMode();
  
  Serial.println("------- CAN Read ----------");
  Serial.println("ID  DLC   DATA");
}

void loop() {
  if (mcp2515.readMessage(&canMsg) == MCP2515::ERROR_OK) {
    switch (canMsg.can_id)
    {
    case CAN_MSG_ENGINE_DATA:
      speedKph = (canMsg.data[0] << 8) + canMsg.data[1];   // XMISSION_SPEED      
      break;

    case CAN_MSG_POWERTRAIN_DATA:
      rpm = (canMsg.data[2] << 8) + canMsg.data[3];    // ENGINE_RPM
      
      break;

    case CAN_MSG_GEARBOX:
      gear = canMsg.data[0];
      gear = gear & 0b00111111;             // GEAR_SHIFTER
      switch (gear)
      {
      case 0x20:
        gear = 'L';                         // Low Gear
        break;
      
      case 0x10:
        gear = 'S';                         // Sport
        break;

      case 0x8:
        gear = 'D';                         // Drive
        break;

      case 0x4:
        gear = 'N';                         // Neutral
        break;

      case 0x2:
        gear = 'R';                         // Reverse
        break;

      case 0x1:
        gear = 'P';                         // Park
        break;
      
      default:
        break;
      }

      break;
    
    default:
      break;
    }


    sprintf(str, "Gear: %c,\t RPM2: %d,\t Speed %d,\t %d,\t %d,\t %d", gear, rpm, speedKph);

    Serial.print(str);
    Serial.println();

  }
}